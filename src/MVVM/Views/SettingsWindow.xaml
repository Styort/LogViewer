<Window x:Class="LogViewer.MVVM.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LogViewer.MVVM"
        xmlns:viewModels="clr-namespace:LogViewer.MVVM.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:validations="clr-namespace:LogViewer.Validations"
        xmlns:dropDownCustomColorPicker="clr-namespace:DropDownCustomColorPicker;assembly=CustomColorPicker"
        mc:Ignorable="d"
        Title="Settings" Height="505" Width="600" MinHeight="505">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Styles/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="ToolTip" Value="{x:Null}"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <viewModels:SettingsViewModel/>
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <TabControl BorderThickness="0">
            <TabItem Header="General" Height="25" Width="100">
                <GroupBox FontSize="16" Style="{DynamicResource MaterialDesignGroupBox}" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="General settings" FontSize="16" Foreground="{Binding DataContext.FontColor, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="250"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="Auto start reading logs at startup:" ToolTip="Start read logs immediately when application startup" VerticalAlignment="Center" />
                        <ToggleButton Grid.Row="0" Grid.Column="1" IsChecked="{Binding Path=IsAutoStartReadAtStartup}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,5,0,0"/>

                        <TextBlock Text="Minimize to Tray Icon:" ToolTip="Shows a tray icon when LogViewer is minimized" VerticalAlignment="Center"  Grid.Row="1"/>
                        <ToggleButton Grid.Row="1" Grid.Column="1" IsChecked="{Binding Path=MinimizeToTray}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,5,0,0"/>

                        <TextBlock Text="Only one instance of app:" ToolTip="Only one instance of Log Viewer in system" VerticalAlignment="Center"  Grid.Row="2"/>
                        <ToggleButton Grid.Row="2" Grid.Column="1" IsChecked="{Binding Path=OnlyOneAppInstance}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,5,0,0"/>

                        <TextBlock Grid.Row="3" Text="Displayed date format:" ToolTip="Displayed date format" VerticalAlignment="Center"/>
                        <ComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Path=DataFormats}" SelectedItem="{Binding Path=SelectedDataFormat}" Width="210" HorizontalAlignment="Left" ToolTip="{Binding Path=ExampleDateTime}"/>

                        <TextBlock Grid.Row="4" Text="Theme:" ToolTip="Application theme" VerticalAlignment="Center"/>
                        <ComboBox Grid.Row="4" Grid.Column="1" ItemsSource="{Binding Path=Themes}" SelectedItem="{Binding Path=SelectedTheme}" Width="210" HorizontalAlignment="Left">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" Background="{Binding Color}" Height="25" Foreground="White" Padding="10,0,10,0" Margin="0,-5"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Grid.Row="5" Text="Theme font color:" ToolTip="Theme font color" VerticalAlignment="Center" Margin="0,10"/>
                        <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="1">
                            <dropDownCustomColorPicker:CustomColorPicker Width="50" Margin="0,5,0,0" VerticalAlignment="Center" SelectedColor="{Binding Path=SelectedFontColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Style="{StaticResource SetDefaultButtonStyle}" Command="{Binding Path=SetDefaultColorCommand}" CommandParameter="Font"/>
                        </StackPanel>

                        <TextBlock Text="Show IP column:" ToolTip="Show IP column in log table" VerticalAlignment="Center"  Grid.Row="6"/>
                        <ToggleButton Grid.Row="6" Grid.Column="1" IsChecked="{Binding Path=IsShowIpColumn}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,5,0,0"/>

                        <TextBlock Grid.Row="7" Text="Max message buffer size:" ToolTip="Maximum count of log messages that can be stored in buffer"/>
                        <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1">
                            <ToggleButton IsChecked="{Binding Path=IsEnableMaxMessageBufferSize}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,5,0,0"/>
                            <TextBox Width="100" Margin="10,0,10,0" HorizontalContentAlignment="Center" Text="{Binding Path=MaxMessageBufferSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=IsEnableMaxMessageBufferSize}"/>
                        </StackPanel>

                        <TextBlock Grid.Row="8" Text="Count of deleted messages:" ToolTip="Count of messages to be deleted if buffer is overflow" Visibility="{Binding Path=IsEnableMaxMessageBufferSize, Converter={StaticResource BooleanToVisibility}}"/>
                        <TextBox Grid.Row="8" Grid.Column="1" Width="100"  HorizontalAlignment="Left" HorizontalContentAlignment="Center" Text="{Binding Path=DeletedMessagesCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Path=IsEnableMaxMessageBufferSize, Converter={StaticResource BooleanToVisibility}}"/>

                    </Grid>
                </GroupBox>
            </TabItem>
            <TabItem Header="Receivers" Height="25" Width="100">
                <GroupBox FontSize="16" Style="{DynamicResource MaterialDesignGroupBox}" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="List of eceivers" FontSize="16" Foreground="{Binding DataContext.FontColor, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="45"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.RowSpan="2"/>
                        <Button Foreground="{Binding Path=FontColor}" Width="90" HorizontalAlignment="Left" Content="Add" Margin="5" Command="{Binding Path=AddReceiverCommand}"/>
                        <Button Foreground="{Binding Path=FontColor}" x:Name="RemoveButton" Width="90" HorizontalAlignment="Right" Content="Remove" Margin="5" Command="{Binding Path=RemoveReceiverCommand}" 
                                Style="{StaticResource RemoveButtonStyle}"/>

                        <ListBox HorizontalContentAlignment="Stretch" Grid.Row="1" Grid.Column="0" Margin="5" ItemsSource="{Binding Path=Receivers}" SelectedItem="{Binding Path=SelectedReceiver}" x:Name="ReceiversList">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid x:Name="ListItemGrid">
                                        <TextBlock Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto"/>
                                        <CheckBox IsChecked="{Binding Path=IsActive, Mode=TwoWay}" ToolTip="Is Active" HorizontalAlignment="Right"/>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                                            <Setter Property="ListBoxItem.Opacity" Value="0.5"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                        <Border Grid.Column="1" Grid.RowSpan="2" Margin="5,0,0,0"/>

                        <StackPanel Orientation="Vertical" Grid.RowSpan="2" Grid.Column="1" Margin="10,5,10,5" Visibility="{Binding Path=IsConfigurationVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="Configuration" FontWeight="Bold"/>
                            <Grid Margin="0,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="Receiver Name:" VerticalAlignment="Center" FontSize="14"/>
                                <TextBox Grid.Column="1" Text="{Binding Path=SelectedReceiver.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Grid.Row="1" Text="UDP Port Number:" VerticalAlignment="Center" FontSize="14"/>
                                <TextBox  Grid.Row="1" Grid.Column="1" >
                                    <TextBox.Text>
                                        <Binding Path="SelectedReceiver.Port" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:PortNumberValidation ValidatesOnTargetUpdated="True"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>

                                <TextBlock Grid.Row="2" Text="Color" VerticalAlignment="Center" Margin="0,10"/>
                                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1">
                                    <dropDownCustomColorPicker:CustomColorPicker Width="50" Margin="0,20" SelectedColor="{Binding Path=SelectedReceiver.Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Style="{StaticResource SetDefaultButtonStyle}" Command="{Binding Path=SetDefaultColorCommand}" CommandParameter="Receiver"/>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </GroupBox>
            </TabItem>
            <TabItem Header="Ignored List" Height="25" Width="100">
                <GroupBox Style="{DynamicResource MaterialDesignGroupBox}" FontSize="16" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Ignored IP Addresses" FontSize="16" Foreground="{Binding DataContext.FontColor, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="45"/>
                            <RowDefinition Height="45"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Button Grid.Row="0" Foreground="{Binding Path=FontColor}" Style="{StaticResource AddIgnoreIpButtonStyle}"/>
                        <Button Grid.Row="0" Foreground="{Binding Path=FontColor}" Style="{StaticResource RemoveIgnoreIpButtonStyle}"/>

                        <TextBox Grid.Row="1" Style="{StaticResource IPTextBoxStyle}" materialDesign:HintAssist.Hint="IP Address" x:Name="IPAddress">
                            <TextBox.Text>
                                <Binding NotifyOnValidationError="True" Path="TypedIP" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validations:IPValidation ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Border Grid.RowSpan="3"/>

                        <ListBox Grid.Row="2" Grid.Column="0" Margin="5,20,5,5" ItemsSource="{Binding Path=IgnoredIpAdresses}" SelectedItem="{Binding Path=SelectedIP}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid x:Name="ListItemGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="115"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding Path=IP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto"/>
                                        <CheckBox VerticalAlignment="Bottom" Grid.Column="1" IsChecked="{Binding Path=IsActive, Mode=TwoWay}" ToolTip="Is Active" HorizontalAlignment="Right"/>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                                            <Setter Property="ListBoxItem.Opacity" Value="0.5"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>    
                        </ListBox>
                    </Grid>
                </GroupBox>
            </TabItem>
            <TabItem Header="About" Width="100" Height="25">
                <GroupBox Style="{DynamicResource MaterialDesignGroupBox}" FontSize="16" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="About" FontSize="16" Foreground="{Binding DataContext.FontColor, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>

                    <StackPanel Orientation="Vertical">
                        <TextBlock HorizontalAlignment="Center" Text="Log Viewer"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Version: " FontWeight="Bold"/>
                            <TextBlock Text="{Binding Path=Version}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Author: " FontWeight="Bold"/>
                            <TextBlock Text="Sinev Viktor"/>
                            <TextBlock Text=" ("/>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://github.com/Styort" Click="Hyperlink_OnClick">
                                    <TextBlock Text="GitHub" ToolTip="https://github.com/Styort"/>
                                </Hyperlink>
                            </TextBlock>
                            <TextBlock Text=", "/>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://stackoverflow.com/users/6551141/%D0%92%D0%B8%D1%82%D1%91%D0%BA-%D0%A1%D0%B8%D0%BD%D1%91%D0%B2" Click="Hyperlink_OnClick">
                                    <TextBlock Text="Stack Overflow" ToolTip="https://stackoverflow.com/users/6551141/%D0%92%D0%B8%D1%82%D1%91%D0%BA-%D0%A1%D0%B8%D0%BD%D1%91%D0%B2"/>
                                </Hyperlink>
                            </TextBlock>
                            <TextBlock Text=")"/>
                        </StackPanel>
                        <TextBlock Text="Log Viewer features:"/>
                        <Border BorderThickness="1" Height="100" Margin="0,5" Padding="5">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="- Read logs from UDP package by log4j template;"/>
                                <TextBlock Text="- Export and import log files;"/>
                                <TextBlock Text="- Sorting and filtering received logs;"/>
                                <TextBlock Text="- and many other features (for details see ReleaseNotes file)."/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </GroupBox>
            </TabItem>
        </TabControl>
        <Button Grid.Row="1" Grid.ColumnSpan="2" Foreground="{Binding Path=FontColor}" Width="100" HorizontalAlignment="Right" Margin="0,0,120,0" Content="Save" Command="{Binding Path=SaveCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
        <Button Grid.Row="1" Grid.ColumnSpan="2" Foreground="{Binding Path=FontColor}" Width="100" HorizontalAlignment="Right" Margin="120,0,5,0" Content="Cancel" Command="{Binding Path=CancelCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"/>
    </Grid>
</Window>
